{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isabela\\\\Documents\\\\GitHub\\\\produtos-comp\\\\src\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\n\n// Função para verificar se o usuário está autenticado\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  const token = localStorage.getItem('token'); // Verifique se há um token\n  if (!token) return false; // Se não há token, o usuário não está autenticado\n\n  try {\n    const decoded = JSON.parse(atob(token.split('.')[1])); // Decodificando o JWT\n    const isExpired = decoded.exp < Date.now() / 1000; // Verifica se o token está expirado\n    return !isExpired; // Se não expirou, é válido\n  } catch (e) {\n    return false; // Se não puder decodificar ou se o token for inválido\n  }\n};\n\n// Componente de Rota Protegida\nconst PrivateRoute = ({\n  element\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true); // Estado de carregamento\n\n  useEffect(() => {\n    // Simula um tempo de carregamento para verificar a autenticação (opcional)\n    const timer = setTimeout(() => setLoading(false), 500);\n    return () => clearTimeout(timer); // Limpa o timer quando o componente for desmontado\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this); // Exibe um carregamento enquanto verifica a autenticação\n  }\n  return isAuthenticated() ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 40\n  }, this);\n};\n_s(PrivateRoute, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","jsxDEV","_jsxDEV","isAuthenticated","token","localStorage","getItem","decoded","JSON","parse","atob","split","isExpired","exp","Date","now","e","PrivateRoute","element","_s","loading","setLoading","timer","setTimeout","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/Isabela/Documents/GitHub/produtos-comp/src/PrivateRoute.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n// Função para verificar se o usuário está autenticado\r\nconst isAuthenticated = () => {\r\n  const token = localStorage.getItem('token'); // Verifique se há um token\r\n  if (!token) return false; // Se não há token, o usuário não está autenticado\r\n\r\n  try {\r\n    const decoded = JSON.parse(atob(token.split('.')[1])); // Decodificando o JWT\r\n    const isExpired = decoded.exp < Date.now() / 1000; // Verifica se o token está expirado\r\n    return !isExpired; // Se não expirou, é válido\r\n  } catch (e) {\r\n    return false; // Se não puder decodificar ou se o token for inválido\r\n  }\r\n};\r\n\r\n// Componente de Rota Protegida\r\nconst PrivateRoute = ({ element }) => {\r\n  const [loading, setLoading] = useState(true);  // Estado de carregamento\r\n\r\n  useEffect(() => {\r\n    // Simula um tempo de carregamento para verificar a autenticação (opcional)\r\n    const timer = setTimeout(() => setLoading(false), 500);\r\n    return () => clearTimeout(timer);  // Limpa o timer quando o componente for desmontado\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Carregando...</div>;  // Exibe um carregamento enquanto verifica a autenticação\r\n  }\r\n\r\n  return isAuthenticated() ? element : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAI,CAACF,KAAK,EAAE,OAAO,KAAK,CAAC,CAAC;;EAE1B,IAAI;IACF,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,MAAMC,SAAS,GAAGL,OAAO,CAACM,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACnD,OAAO,CAACH,SAAS,CAAC,CAAC;EACrB,CAAC,CAAC,OAAOI,CAAC,EAAE;IACV,OAAO,KAAK,CAAC,CAAC;EAChB;AACF,CAAC;;AAED;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE/CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMwB,KAAK,GAAGC,UAAU,CAAC,MAAMF,UAAU,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;IACtD,OAAO,MAAMG,YAAY,CAACF,KAAK,CAAC,CAAC,CAAE;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACX,oBAAOlB,OAAA;MAAAuB,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAE;EACpC;EAEA,OAAO1B,eAAe,CAAC,CAAC,GAAGe,OAAO,gBAAGhB,OAAA,CAACF,QAAQ;IAAC8B,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/D,CAAC;AAACV,EAAA,CAdIF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAgBlB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}