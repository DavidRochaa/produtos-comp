{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isabela\\\\Documents\\\\GitHub\\\\produtos-comp\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Para navegação\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [senha, setSenha] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate(); // Hook de navegação\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const usuario = {\n      email,\n      senha\n    };\n    try {\n      const response = await axios.post('http://localhost:5000/api/users/login', usuario);\n      localStorage.setItem('token', response.data.token);\n      console.log(response.data); // Verifique se o token está vindo da API\n      alert(response.data.message); // Exibe a mensagem do backend (exemplo: \"Login bem-sucedido\")\n\n      // Armazenando o token no localStorage\n\n      // setErrorMessage('');  // Limpa qualquer erro de mensagem\n      if (response.data.token) {\n        navigate('/home'); // Redireciona para a página inicial se o token for recebido\n      }\n    } catch (error) {\n      console.error('Erro no login:', error);\n      if (error.response) {\n        setErrorMessage(error.response.data.message); // Exibe erro se a resposta contiver uma mensagem\n      } else {\n        setErrorMessage('Erro de conexão ou servidor não disponível'); // Exibe erro caso o servidor não responda\n      }\n    }\n  };\n  const handleRegisterRedirect = () => {\n    navigate('/register'); // Redireciona para a página de registro\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"col-md-6 mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          className: \"form-control\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"senha\",\n          className: \"form-label\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"senha\",\n          className: \"form-control\",\n          value: senha,\n          onChange: e => setSenha(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary w-100\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegisterRedirect,\n        className: \"btn btn-link\",\n        children: \"Criar uma conta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"PP9EySGMVhhEVt5Zkz9f8B9y0ZE=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","senha","setSenha","errorMessage","setErrorMessage","navigate","handleSubmit","e","preventDefault","usuario","response","post","localStorage","setItem","data","token","console","log","alert","message","error","handleRegisterRedirect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Isabela/Documents/GitHub/produtos-comp/src/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // Para navegação\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const navigate = useNavigate(); // Hook de navegação\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const usuario = { email, senha };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/users/login', usuario);\r\n      localStorage.setItem('token', response.data.token);\r\n      console.log(response.data);  // Verifique se o token está vindo da API\r\n      alert(response.data.message);  // Exibe a mensagem do backend (exemplo: \"Login bem-sucedido\")\r\n\r\n      // Armazenando o token no localStorage\r\n\r\n      // setErrorMessage('');  // Limpa qualquer erro de mensagem\r\n      if (response.data.token) {\r\n        navigate('/home');  // Redireciona para a página inicial se o token for recebido\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro no login:', error);\r\n      if (error.response) {\r\n        setErrorMessage(error.response.data.message);  // Exibe erro se a resposta contiver uma mensagem\r\n      } else {\r\n        setErrorMessage('Erro de conexão ou servidor não disponível');  // Exibe erro caso o servidor não responda\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRegisterRedirect = () => {\r\n    navigate('/register'); // Redireciona para a página de registro\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center mb-4\">Login</h1>\r\n      <form onSubmit={handleSubmit} className=\"col-md-6 mx-auto\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            className=\"form-control\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"senha\" className=\"form-label\">Senha</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"senha\"\r\n            className=\"form-control\"\r\n            value={senha}\r\n            onChange={(e) => setSenha(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {errorMessage && <div className=\"alert alert-danger\">{errorMessage}</div>}\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary w-100\">Login</button>\r\n      </form>\r\n\r\n      {/* Botão para redirecionar à página de cadastro */}\r\n      <div className=\"mt-3 text-center\">\r\n        <button onClick={handleRegisterRedirect} className=\"btn btn-link\">Criar uma conta</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}