{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isabela\\\\Documents\\\\GitHub\\\\produtos-comp\\\\src\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n\n// const HomePage = () => {\n//   const [produtos, setProdutos] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const navigate = useNavigate();\n\n//   // Função para listar os produtos\n//   const fetchProdutos = async () => {\n//     try {\n//       const token = localStorage.getItem('token');\n//       console.log(\"Token recuperado: \", token);  // Verifique o token\n\n//       if (!token) {\n//         console.error('Token não encontrado!');\n//         setLoading(false);\n//         navigate('/login');\n//         return;\n//       }\n\n//       // Requisição para o backend\n//       const response = await axios.get('http://localhost:5000/api/produtos', {\n//         headers: {\n//           Authorization: `Bearer ${token}`,  // Envia o token no cabeçalho\n//         },\n//       });\n\n//       setProdutos(response.data);\n//       setLoading(false);\n//     } catch (error) {\n//       console.error('Erro ao carregar produtos:', error);  // Log completo do erro\n\n//       if (error.response) {\n//         // Se a resposta de erro contiver dados\n//         console.error('Erro de resposta:', error.response.data);\n//         console.error('Status de resposta:', error.response.status);\n//         if (error.response.status === 401) {\n//           console.log('Token inválido ou não fornecido. Redirecionando para login...');\n//         }\n//       } else {\n//         // Se o erro for de rede ou outro erro não relacionado à resposta\n//         console.error('Erro sem resposta do servidor:', error.message);\n//       }\n//       setLoading(false);\n//     }\n//   };\n\n//   // Função para adicionar produto ao carrinho\n//   const addToCart = (produto) => {\n//     // Recupera o carrinho do localStorage\n//     const cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n//     // Verifica se o produto já está no carrinho\n//     const existingProduct = cart.find((item) => item.id === produto.id);\n\n//     if (existingProduct) {\n//       // Se o produto já existe, incrementa a quantidade\n//       existingProduct.quantidade += 1;\n//     } else {\n//       // Se não existe, adiciona o produto com quantidade 1\n//       cart.push({ ...produto, quantidade: 1 });\n//     }\n\n//     // Atualiza o carrinho no localStorage\n//     localStorage.setItem('cart', JSON.stringify(cart));\n//     console.log(`${produto.nome} foi adicionado ao carrinho!`);\n//   };\n\n//   useEffect(() => {\n//     fetchProdutos(); // Carrega os produtos\n//   }, []); // A dependência vazia garante que isso será executado apenas uma vez, ao carregar o componente\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h1 className=\"text-center mb-4\">Bem-vindo à Página Inicial</h1>\n\n//       {/* Botões de navegação */}\n//       <button className=\"btn btn-primary\" onClick={() => navigate('/cadastrar')}>\n//         Criar Produto\n//       </button>\n//       <button className=\"btn btn-info ms-3\" onClick={() => navigate('/cart')}>\n//         Ir para o Carrinho\n//       </button>\n\n//       <h2 className=\"mt-5\">Produtos Disponíveis</h2>\n//       <ul className=\"list-group\">\n//         {produtos.length > 0 ? (\n//           produtos.map((produto) => (\n//             <li key={produto.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n//               {produto.nome}\n//               <button className=\"btn btn-success\" onClick={() => addToCart(produto)}>\n//                 Adicionar ao Carrinho\n//               </button>\n//             </li>\n//           ))\n//         ) : (\n//           <li className=\"list-group-item\">Nenhum produto disponível</li>\n//         )}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default HomePage;\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [produtos, setProdutos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Função para listar os produtos\n  const fetchProdutos = async () => {\n    try {\n      const token = localStorage.getItem('token'); // Verifica se o token existe\n      console.log(\"Token recuperado: \", token); // Verifique o token\n\n      if (!token) {\n        console.error('Token não encontrado!');\n        setLoading(false);\n        navigate('/login'); // Redireciona para o login se o token não for encontrado\n        return;\n      }\n\n      // Requisição para o backend\n      const response = await axios.get('http://localhost:5000/api/produtos', {\n        headers: {\n          Authorization: `Bearer ${token}` // Envia o token no cabeçalho\n        }\n      });\n      setProdutos(response.data); // Armazena os produtos no estado\n      setLoading(false);\n    } catch (error) {\n      console.error('Erro ao carregar produtos:', error); // Log completo do erro\n\n      if (error.response) {\n        // Se a resposta de erro contiver dados\n        console.error('Erro de resposta:', error.response.data);\n        console.error('Status de resposta:', error.response.status);\n        if (error.response.status === 401) {\n          console.log('Token inválido ou não fornecido. Redirecionando para login...');\n          navigate('/login'); // Redireciona para login em caso de erro 401\n        }\n      } else {\n        // Se o erro for de rede ou outro erro não relacionado à resposta\n        console.error('Erro sem resposta do servidor:', error.message);\n      }\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchProdutos(); // Carrega os produtos\n  }, []); // Dependência vazia garante que isso será executado apenas uma vez, ao carregar o componente\n\n  // Função para adicionar produto ao carrinho\n  const addToCart = produto => {\n    console.log(`${produto.nome} foi adicionado ao carrinho!`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Bem-vindo \\xE0 P\\xE1gina Inicial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => navigate('/cadastrar'),\n      children: \"Criar Produto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-info ms-3\",\n      onClick: () => navigate('/cart'),\n      children: \"Ir para o Carrinho\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Produtos Dispon\\xEDveis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: produtos.length > 0 ? produtos.map(produto => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [produto.nome, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: () => addToCart(produto),\n          children: \"Adicionar ao Carrinho\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this)]\n      }, produto.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: \"Nenhum produto dispon\\xEDvel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"HGuz7XYmJdgY7kzTt07lxRmP1MA=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","HomePage","_s","produtos","setProdutos","loading","setLoading","navigate","fetchProdutos","token","localStorage","getItem","console","log","error","response","get","headers","Authorization","data","status","message","addToCart","produto","nome","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","id","_c","$RefreshReg$"],"sources":["C:/Users/Isabela/Documents/GitHub/produtos-comp/src/HomePage.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// const HomePage = () => {\r\n//   const [produtos, setProdutos] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const navigate = useNavigate();\r\n\r\n//   // Função para listar os produtos\r\n//   const fetchProdutos = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       console.log(\"Token recuperado: \", token);  // Verifique o token\r\n  \r\n//       if (!token) {\r\n//         console.error('Token não encontrado!');\r\n//         setLoading(false);\r\n//         navigate('/login');\r\n//         return;\r\n//       }\r\n  \r\n//       // Requisição para o backend\r\n//       const response = await axios.get('http://localhost:5000/api/produtos', {\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`,  // Envia o token no cabeçalho\r\n//         },\r\n//       });\r\n  \r\n//       setProdutos(response.data);\r\n//       setLoading(false);\r\n//     } catch (error) {\r\n//       console.error('Erro ao carregar produtos:', error);  // Log completo do erro\r\n  \r\n//       if (error.response) {\r\n//         // Se a resposta de erro contiver dados\r\n//         console.error('Erro de resposta:', error.response.data);\r\n//         console.error('Status de resposta:', error.response.status);\r\n//         if (error.response.status === 401) {\r\n//           console.log('Token inválido ou não fornecido. Redirecionando para login...');\r\n//         }\r\n//       } else {\r\n//         // Se o erro for de rede ou outro erro não relacionado à resposta\r\n//         console.error('Erro sem resposta do servidor:', error.message);\r\n//       }\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // Função para adicionar produto ao carrinho\r\n//   const addToCart = (produto) => {\r\n//     // Recupera o carrinho do localStorage\r\n//     const cart = JSON.parse(localStorage.getItem('cart')) || [];\r\n\r\n//     // Verifica se o produto já está no carrinho\r\n//     const existingProduct = cart.find((item) => item.id === produto.id);\r\n\r\n//     if (existingProduct) {\r\n//       // Se o produto já existe, incrementa a quantidade\r\n//       existingProduct.quantidade += 1;\r\n//     } else {\r\n//       // Se não existe, adiciona o produto com quantidade 1\r\n//       cart.push({ ...produto, quantidade: 1 });\r\n//     }\r\n\r\n//     // Atualiza o carrinho no localStorage\r\n//     localStorage.setItem('cart', JSON.stringify(cart));\r\n//     console.log(`${produto.nome} foi adicionado ao carrinho!`);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchProdutos(); // Carrega os produtos\r\n//   }, []); // A dependência vazia garante que isso será executado apenas uma vez, ao carregar o componente\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h1 className=\"text-center mb-4\">Bem-vindo à Página Inicial</h1>\r\n\r\n//       {/* Botões de navegação */}\r\n//       <button className=\"btn btn-primary\" onClick={() => navigate('/cadastrar')}>\r\n//         Criar Produto\r\n//       </button>\r\n//       <button className=\"btn btn-info ms-3\" onClick={() => navigate('/cart')}>\r\n//         Ir para o Carrinho\r\n//       </button>\r\n\r\n//       <h2 className=\"mt-5\">Produtos Disponíveis</h2>\r\n//       <ul className=\"list-group\">\r\n//         {produtos.length > 0 ? (\r\n//           produtos.map((produto) => (\r\n//             <li key={produto.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n//               {produto.nome}\r\n//               <button className=\"btn btn-success\" onClick={() => addToCart(produto)}>\r\n//                 Adicionar ao Carrinho\r\n//               </button>\r\n//             </li>\r\n//           ))\r\n//         ) : (\r\n//           <li className=\"list-group-item\">Nenhum produto disponível</li>\r\n//         )}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HomePage;\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst HomePage = () => {\r\n  const [produtos, setProdutos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  // Função para listar os produtos\r\n  const fetchProdutos = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');  // Verifica se o token existe\r\n      console.log(\"Token recuperado: \", token);  // Verifique o token\r\n\r\n      if (!token) {\r\n        console.error('Token não encontrado!');\r\n        setLoading(false);\r\n        navigate('/login');  // Redireciona para o login se o token não for encontrado\r\n        return;\r\n      }\r\n\r\n      // Requisição para o backend\r\n      const response = await axios.get('http://localhost:5000/api/produtos', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,  // Envia o token no cabeçalho\r\n        },\r\n      });\r\n\r\n      setProdutos(response.data);  // Armazena os produtos no estado\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar produtos:', error);  // Log completo do erro\r\n\r\n      if (error.response) {\r\n        // Se a resposta de erro contiver dados\r\n        console.error('Erro de resposta:', error.response.data);\r\n        console.error('Status de resposta:', error.response.status);\r\n        if (error.response.status === 401) {\r\n          console.log('Token inválido ou não fornecido. Redirecionando para login...');\r\n          navigate('/login');  // Redireciona para login em caso de erro 401\r\n        }\r\n      } else {\r\n        // Se o erro for de rede ou outro erro não relacionado à resposta\r\n        console.error('Erro sem resposta do servidor:', error.message);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProdutos(); // Carrega os produtos\r\n  }, []);  // Dependência vazia garante que isso será executado apenas uma vez, ao carregar o componente\r\n\r\n  // Função para adicionar produto ao carrinho\r\n  const addToCart = (produto) => {\r\n    console.log(`${produto.nome} foi adicionado ao carrinho!`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center mb-4\">Bem-vindo à Página Inicial</h1>\r\n\r\n      {/* Botões de navegação */}\r\n      <button className=\"btn btn-primary\" onClick={() => navigate('/cadastrar')}>\r\n        Criar Produto\r\n      </button>\r\n      <button className=\"btn btn-info ms-3\" onClick={() => navigate('/cart')}>\r\n        Ir para o Carrinho\r\n      </button>\r\n\r\n      <h2 className=\"mt-5\">Produtos Disponíveis</h2>\r\n      <ul className=\"list-group\">\r\n        {produtos.length > 0 ? (\r\n          produtos.map((produto) => (\r\n            <li key={produto.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              {produto.nome}\r\n              <button className=\"btn btn-success\" onClick={() => addToCart(produto)}>\r\n                Adicionar ao Carrinho\r\n              </button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li className=\"list-group-item\">Nenhum produto disponível</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}