{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isabela\\\\Documents\\\\GitHub\\\\produtos-comp\\\\src\\\\CartPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartPage = () => {\n  _s();\n  const [carrinho, setCarrinho] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(true); // Para verificar se o usuário está autenticado\n  const navigate = useNavigate(); // Hook para navegação\n\n  // Função para verificar o token JWT\n  const checkAuthentication = () => {\n    const token = localStorage.getItem('token'); // Verificando o token no localStorage\n    if (!token) {\n      setIsAuthenticated(false); // Se não houver token, redireciona para o login\n    }\n  };\n\n  // Efeito para verificar a autenticação quando a página for carregada\n  useEffect(() => {\n    checkAuthentication();\n\n    // Carrega os itens do carrinho armazenados no localStorage\n    const storedCart = localStorage.getItem('cart');\n    if (storedCart) {\n      setCarrinho(JSON.parse(storedCart)); // Atualiza o estado com os itens do carrinho\n    }\n  }, []);\n\n  // Função para adicionar um produto ao carrinho\n  const addToCart = produto => {\n    const existingProduct = carrinho.find(item => item.id === produto.id);\n    let updatedCarrinho;\n    if (existingProduct) {\n      // Se o produto já existe no carrinho, aumenta a quantidade\n      updatedCarrinho = carrinho.map(item => item.id === produto.id ? {\n        ...item,\n        quantidade: item.quantidade + 1\n      } : item);\n    } else {\n      // Se não existe no carrinho, adiciona o produto\n      updatedCarrinho = [...carrinho, {\n        ...produto,\n        quantidade: 1\n      }];\n    }\n    setCarrinho(updatedCarrinho);\n    localStorage.setItem('cart', JSON.stringify(updatedCarrinho)); // Atualiza o localStorage\n  };\n\n  // Função para remover um item do carrinho\n  const removeFromCart = produtoId => {\n    const updatedCart = carrinho.filter(produto => produto.id !== produtoId);\n    setCarrinho(updatedCart);\n    localStorage.setItem('cart', JSON.stringify(updatedCart)); // Atualiza o localStorage\n  };\n\n  // Função para calcular o total do carrinho\n  const calcularTotal = () => {\n    return carrinho.reduce((total, produto) => total + produto.preco * produto.quantidade, 0);\n  };\n\n  // Se o usuário não estiver autenticado, redireciona para a página de login\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Carrinho de Compras\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: carrinho.length > 0 ? carrinho.map((produto, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [produto.nome, \" - R$ \", produto.preco, \" x \", produto.quantidade, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger ms-3\",\n          onClick: () => removeFromCart(produto.id),\n          children: \"Remover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: \"Carrinho vazio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mt-3\",\n      children: [\"Total: R$ \", calcularTotal().toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success mt-3\",\n      children: \"Finalizar Compra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary mt-3 ms-3\",\n      onClick: () => navigate(-1),\n      children: \"Voltar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(CartPage, \"35SfU7vJJJapwI9DsUzSaqQl5uc=\", false, function () {\n  return [useNavigate];\n});\n_c = CartPage;\nexport default CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","useNavigate","jsxDEV","_jsxDEV","CartPage","_s","carrinho","setCarrinho","isAuthenticated","setIsAuthenticated","navigate","checkAuthentication","token","localStorage","getItem","storedCart","JSON","parse","addToCart","produto","existingProduct","find","item","id","updatedCarrinho","map","quantidade","setItem","stringify","removeFromCart","produtoId","updatedCart","filter","calcularTotal","reduce","total","preco","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","length","index","nome","onClick","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Isabela/Documents/GitHub/produtos-comp/src/CartPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\n\r\nconst CartPage = () => {\r\n  const [carrinho, setCarrinho] = useState([]);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(true); // Para verificar se o usuário está autenticado\r\n  const navigate = useNavigate(); // Hook para navegação\r\n\r\n  // Função para verificar o token JWT\r\n  const checkAuthentication = () => {\r\n    const token = localStorage.getItem('token');  // Verificando o token no localStorage\r\n    if (!token) {\r\n      setIsAuthenticated(false);  // Se não houver token, redireciona para o login\r\n    }\r\n  };\r\n\r\n  // Efeito para verificar a autenticação quando a página for carregada\r\n  useEffect(() => {\r\n    checkAuthentication();\r\n\r\n    // Carrega os itens do carrinho armazenados no localStorage\r\n    const storedCart = localStorage.getItem('cart');\r\n    if (storedCart) {\r\n      setCarrinho(JSON.parse(storedCart));  // Atualiza o estado com os itens do carrinho\r\n    }\r\n  }, []);\r\n\r\n  // Função para adicionar um produto ao carrinho\r\n  const addToCart = (produto) => {\r\n    const existingProduct = carrinho.find(item => item.id === produto.id);\r\n    let updatedCarrinho;\r\n\r\n    if (existingProduct) {\r\n      // Se o produto já existe no carrinho, aumenta a quantidade\r\n      updatedCarrinho = carrinho.map(item =>\r\n        item.id === produto.id\r\n          ? { ...item, quantidade: item.quantidade + 1 }\r\n          : item\r\n      );\r\n    } else {\r\n      // Se não existe no carrinho, adiciona o produto\r\n      updatedCarrinho = [...carrinho, { ...produto, quantidade: 1 }];\r\n    }\r\n\r\n    setCarrinho(updatedCarrinho);\r\n    localStorage.setItem('cart', JSON.stringify(updatedCarrinho));  // Atualiza o localStorage\r\n  };\r\n\r\n  // Função para remover um item do carrinho\r\n  const removeFromCart = (produtoId) => {\r\n    const updatedCart = carrinho.filter((produto) => produto.id !== produtoId);\r\n    setCarrinho(updatedCart);\r\n    localStorage.setItem('cart', JSON.stringify(updatedCart)); // Atualiza o localStorage\r\n  };\r\n\r\n  // Função para calcular o total do carrinho\r\n  const calcularTotal = () => {\r\n    return carrinho.reduce((total, produto) => total + (produto.preco * produto.quantidade), 0);\r\n  };\r\n\r\n  // Se o usuário não estiver autenticado, redireciona para a página de login\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center mb-4\">Carrinho de Compras</h1>\r\n\r\n      {/* Exibe a lista de produtos no carrinho */}\r\n      <ul className=\"list-group\">\r\n        {carrinho.length > 0 ? (\r\n          carrinho.map((produto, index) => (\r\n            <li key={index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              {produto.nome} - R$ {produto.preco} x {produto.quantidade}\r\n              <button \r\n                className=\"btn btn-danger ms-3\"\r\n                onClick={() => removeFromCart(produto.id)}\r\n              >\r\n                Remover\r\n              </button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li className=\"list-group-item\">Carrinho vazio</li>\r\n        )}\r\n      </ul>\r\n\r\n      {/* Total do carrinho */}\r\n      <h3 className=\"mt-3\">Total: R$ {calcularTotal().toFixed(2)}</h3>\r\n\r\n      {/* Botão para finalizar a compra */}\r\n      <button className=\"btn btn-success mt-3\">Finalizar Compra</button>\r\n\r\n      {/* Botão para voltar à página inicial */}\r\n      <button \r\n        className=\"btn btn-secondary mt-3 ms-3\"\r\n        onClick={() => navigate(-1)}\r\n      >\r\n        Voltar\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}